package com.ralf.cardmanager.spider.task.divvypay.operation.people;

import com.ralf.cardmanager.spider.task.divvypay.config.DivvyPaySiteConfig;
import com.ralf.cardmanager.spider.task.divvypay.operation.base.BaseDivvyOperation;
import com.ralf.cardmanager.spider.task.divvypay.operation.base.BaseDivvyOpertionResp;
import com.ralf.cardmanager.spider.task.divvypay.operation.cardoperation.CreateCardStep2;

public class GetBudgetPeople extends BaseDivvyOperation<GetBudgetPeopleRsp> {

    public GetBudgetPeople(DivvyPaySiteConfig config) {
        super(config);
        this.body = "{\"operationName\":\"GetBudgetPeopleTable\",\"variables\":{\"budgetId\":\"%s\",\"includeBillPayPayments\":false},\"query\":\"query GetBudgetPeopleTable($budgetId: ID!, $first: Int = 15, $after: String, $usersSearch: String, $dateEnd: Int, $dateStart: Int, $includeBillPayPayments: Boolean) {\\n  node(id: $budgetId) {\\n    ... on Budget {\\n      id\\n      company {\\n        id\\n        billPayInfo {\\n          id\\n          active\\n          __typename\\n        }\\n        __typename\\n      }\\n      availableAmountForBudgetPeriod\\n      balance\\n      currentGoal\\n      shareBudgetFunds\\n      totalClearedForBudgetPeriod\\n      totalDivviedForBudgetPeriod\\n      totalPendingForBudgetPeriod\\n      type\\n      totalAllocatedForNextMonth\\n      recurringAmount\\n      userClearedForBudgetPeriod\\n      userDivviedForBudgetPeriod\\n      userPendingForBudgetPeriod\\n      min_owners: users(first: 2, role: MANAGER) {\\n        edges {\\n          node {\\n            id\\n            __typename\\n          }\\n          __typename\\n        }\\n        __typename\\n      }\\n      users(first: $first, after: $after, search: $usersSearch) {\\n        pageInfo {\\n          hasNextPage\\n          endCursor\\n          __typename\\n        }\\n        edges {\\n          role\\n          node {\\n            id\\n            displayName\\n            avatarUrl\\n            firstName\\n            lastName\\n            totalAvailableToSpend(budgetId: $budgetId, dateEnd: $dateEnd, dateStart: $dateStart)\\n            totalCleared(budgetId: $budgetId, dateEnd: $dateEnd, dateStart: $dateStart)\\n            totalSpend(budgetId: $budgetId, dateEnd: $dateEnd, dateStart: $dateStart)\\n            totalPending(budgetId: $budgetId, dateEnd: $dateEnd, dateStart: $dateStart)\\n            totalDivvied(budgetId: $budgetId, dateEnd: $dateEnd, dateStart: $dateStart)\\n            billPayPayments(first: $first, budgetIds: [$budgetId], createdDateStart: $dateStart, createdDateEnd: $dateEnd) @include(if: $includeBillPayPayments) {\\n              totalCount\\n              edges {\\n                node {\\n                  id\\n                  totalAmount\\n                  __typename\\n                }\\n                __typename\\n              }\\n              __typename\\n            }\\n            allocations(first: 1, budgetId: $budgetId) {\\n              edges {\\n                node {\\n                  type\\n                  id\\n                  balance\\n                  totalPending: totalPendingForPeriod\\n                  totalCleared: totalClearedForPeriod\\n                  totalSpend: totalSpendForPeriod\\n                  __typename\\n                }\\n                __typename\\n              }\\n              __typename\\n            }\\n            allCards(first: $first, types: [BURNER, SUBSCRIPTION], budgets: [$budgetId]) {\\n              edges {\\n                node {\\n                  id\\n                  userAllocation {\\n                    type\\n                    id\\n                    balance\\n                    totalPending: totalPendingForPeriod\\n                    totalCleared: totalClearedForPeriod\\n                    totalSpend: totalSpendForPeriod\\n                    __typename\\n                  }\\n                  name\\n                  __typename\\n                }\\n                __typename\\n              }\\n              __typename\\n            }\\n            __typename\\n          }\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}";
        this.bodyParams = new String[]{
                config.getBudgetId()
        };
    }

    @Override
    //返回 {"data":{"node":{"users":{"pageInfo":{"hasNextPage":false,"endCursor":"YXJyYXljb25uZWN0aW9uOjE=","__typename":"PageInfo"},"edges":[{"role":"MANAGER","node":{"totalSpend":0,"totalPending":0,"totalDivvied":4430,"totalCleared":0,"totalAvailableToSpend":4430,"lastName":"SITK","id":"VXNlcjo1MTIzNg==","firstName":"MING","displayName":"MING SITK","avatarUrl":null,"allocations":{"edges":[{"node":{"type":"ONE_TIME","totalSpend":0,"totalPending":0,"totalCleared":0,"id":"VXNlckFsbG9jYXRpb246NDQxNTY3","balance":2700,"__typename":"UserAllocation"},"__typename":"UserAllocationEdge"}],"__typename":"UserAllocationConnection"},"allCards":{"edges":[{"node":{"userAllocation":{"type":"ONE_TIME","totalSpend":0,"totalPending":0,"totalCleared":0,"id":"VXNlckFsbG9jYXRpb246NDY3ODcz","balance":1700,"__typename":"UserAllocation"},"name":"cavy","id":"Q2FyZDozNjMzMDU=","__typename":"Card"},"__typename":"CardEdge"},{"node":{"userAllocation":{"type":"RECURRING","totalSpend":0,"totalPending":0,"totalCleared":0,"id":"VXNlckFsbG9jYXRpb246NDQ1NTgy","balance":20,"__typename":"UserAllocation"},"name":"ralf","id":"Q2FyZDozNDU1NTY=","__typename":"Card"},"__typename":"CardEdge"},{"node":{"userAllocation":{"type":"RECURRING","totalSpend":0,"totalPending":0,"totalCleared":0,"id":"VXNlckFsbG9jYXRpb246NDQ1NTM2","balance":9,"__typename":"UserAllocation"},"name":"ralfbawg","id":"Q2FyZDozNDU0OTg=","__typename":"Card"},"__typename":"CardEdge"},{"node":{"userAllocation":{"type":"RECURRING","totalSpend":0,"totalPending":0,"totalCleared":0,"id":"VXNlckFsbG9jYXRpb246NDQ1MzM4","balance":1,"__typename":"UserAllocation"},"name":"ralfchen","id":"Q2FyZDozNDUzNTc=","__typename":"Card"},"__typename":"CardEdge"}],"__typename":"CardConnection"},"__typename":"User"},"__typename":"BudgetToUsersEdge"},{"role":"MANAGER","node":{"totalSpend":0,"totalPending":0,"totalDivvied":80,"totalCleared":0,"totalAvailableToSpend":80,"lastName":"Gao","id":"VXNlcjo1MTE5OA==","firstName":"Xiaoya","displayName":"Xiaoya Gao","avatarUrl":null,"allocations":{"edges":[{"node":{"type":"ONE_TIME","totalSpend":0,"totalPending":0,"totalCleared":0,"id":"VXNlckFsbG9jYXRpb246NTAzNjEy","balance":0,"__typename":"UserAllocation"},"__typename":"UserAllocationEdge"}],"__typename":"UserAllocationConnection"},"allCards":{"edges":[{"node":{"userAllocation":{"type":"ONE_TIME","totalSpend":0,"totalPending":0,"totalCleared":0,"id":"VXNlckFsbG9jYXRpb246NTE2MzE5","balance":80,"__typename":"UserAllocation"},"name":"ceshiforcreate","id":"Q2FyZDo0MDQ5NDQ=","__typename":"Card"},"__typename":"CardEdge"}],"__typename":"CardConnection"},"__typename":"User"},"__typename":"BudgetToUsersEdge"}],"__typename":"BudgetToUsersConnection"},"userPendingForBudgetPeriod":0,"userDivviedForBudgetPeriod":4430,"userClearedForBudgetPeriod":0,"type":"ONE_TIME","totalPendingForBudgetPeriod":0,"totalDivviedForBudgetPeriod":4510,"totalClearedForBudgetPeriod":0,"totalAllocatedForNextMonth":0,"shareBudgetFunds":false,"recurringAmount":10000,"min_owners":{"edges":[{"node":{"id":"VXNlcjo1MTIzNg==","__typename":"User"},"__typename":"BudgetToUsersEdge"},{"node":{"id":"VXNlcjo1MTE5OA==","__typename":"User"},"__typename":"BudgetToUsersEdge"}],"__typename":"BudgetToUsersConnection"},"id":"QnVkZ2V0OjQ3MzAz","currentGoal":10000,"company":{"id":"Q29tcGFueTozMDI3","billPayInfo":{"id":"QmlsbFBheUNvbXBhbnlJbmZvOjMyMzI=","active":false,"__typename":"BillPayCompanyInfo"},"__typename":"Company"},"balance":5490,"availableAmountForBudgetPeriod":5490,"__typename":"Budget"}}}
    public CreateCardStep2.CreateCardStep2Resp persistent(String rsp) {
        return null;
    }
}

class GetBudgetPeopleRsp extends BaseDivvyOpertionResp {
}